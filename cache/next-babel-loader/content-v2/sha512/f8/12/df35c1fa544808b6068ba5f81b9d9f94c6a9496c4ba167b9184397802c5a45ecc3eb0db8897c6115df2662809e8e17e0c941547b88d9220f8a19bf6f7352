{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { DateTime } from 'luxon';\nimport { CommonSection } from '../common/CommonSection';\nimport { EmptyRowCol } from '../common';\nimport { CommonRows } from '../common/CommonRow';\nimport Util from '../common/Util';\nimport { PreProcessingComponent } from '../common/PreProcessingComponent';\nexport const Education = {\n  Component: ({\n    payload\n  }) => {\n    return PreProcessingComponent({\n      payload,\n      component: Component\n    });\n  }\n};\n\nfunction Component({\n  payload\n}) {\n  return /*#__PURE__*/_jsx(CommonSection, {\n    title: \"EDUCATION\",\n    children: /*#__PURE__*/_jsx(EducationRow, {\n      payload: payload\n    })\n  });\n}\n\nfunction EducationRow({\n  payload\n}) {\n  return /*#__PURE__*/_jsx(EmptyRowCol, {\n    children: payload.list.map((item, index) => {\n      return /*#__PURE__*/_jsx(CommonRows, {\n        payload: serialize(item),\n        index: index\n      }, index.toString());\n    })\n  });\n}\n\nfunction serialize(item) {\n  const DATE_FORMAT = Util.LUXON_DATE_FORMAT;\n  const [startedAt] = [item.startedAt].map(at => DateTime.fromFormat(at, DATE_FORMAT.YYYY_LL).toFormat(DATE_FORMAT.YYYY_DOT_LL));\n  const endedAt = item.endedAt === undefined ? ' ' : [item.endedAt].map(at => DateTime.fromFormat(at, DATE_FORMAT.YYYY_LL).toFormat(DATE_FORMAT.YYYY_DOT_LL));\n  return {\n    left: {\n      title: `${startedAt} ~ ${endedAt}`\n    },\n    right: _objectSpread({}, item)\n  };\n}","map":null,"metadata":{},"sourceType":"module"}