{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { HrefTargetBlank } from '.';\n\n/** Description Recusion Generator */\nexport function CommonDescription({\n  descriptions,\n  option\n}) {\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: descriptions ? /*#__PURE__*/_jsx(\"ul\", {\n      className: option !== null && option !== void 0 && option.padding ? 'pt-2' : '',\n      children: descriptions.map((description, descIndex) => {\n        return /*#__PURE__*/_jsxs(_Fragment, {\n          children: [/*#__PURE__*/_jsx(Description, {\n            description: description\n          }, descIndex.toString()), description.descriptions ? /*#__PURE__*/_jsx(DescriptionRecursion, {\n            descriptions: description.descriptions\n          }, descIndex.toString()) : '']\n        });\n      })\n    }) : ''\n  });\n} // ul 태그 depth 표현을 위한 재귀\n\nfunction DescriptionRecursion({\n  descriptions\n}) {\n  return /*#__PURE__*/_jsx(\"ul\", {\n    children: descriptions.map((description, index) => {\n      return /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsx(Description, {\n          description: description\n        }, index.toString()), description.descriptions ? /*#__PURE__*/_jsx(DescriptionRecursion, {\n          descriptions: description.descriptions\n        }, index.toString()) : '']\n      });\n    })\n  });\n}\n\nfunction Description({\n  description\n}) {\n  const {\n    content,\n    href,\n    postImage,\n    postHref,\n    weight\n  } = description;\n\n  const component = (() => {\n    if (href && postImage) {\n      return /*#__PURE__*/_jsxs(\"li\", {\n        style: getFontWeight(weight),\n        children: [/*#__PURE__*/_jsx(HrefTargetBlank, {\n          url: href,\n          text: content\n        }), \" \", /*#__PURE__*/_jsx(\"img\", {\n          src: postImage,\n          alt: postImage\n        })]\n      });\n    }\n\n    if (href) {\n      return /*#__PURE__*/_jsx(\"li\", {\n        style: getFontWeight(weight),\n        children: /*#__PURE__*/_jsx(HrefTargetBlank, {\n          url: href,\n          text: content\n        })\n      });\n    }\n\n    if (postHref && postImage) {\n      return /*#__PURE__*/_jsxs(\"li\", {\n        style: getFontWeight(weight),\n        children: [content, \" \", /*#__PURE__*/_jsx(HrefTargetBlank, {\n          url: postHref,\n          text: postHref\n        }), ' ', /*#__PURE__*/_jsx(\"img\", {\n          src: postImage,\n          alt: postImage\n        })]\n      });\n    }\n\n    if (postHref) {\n      return /*#__PURE__*/_jsxs(\"li\", {\n        style: getFontWeight(weight),\n        children: [content, \" \", /*#__PURE__*/_jsx(HrefTargetBlank, {\n          url: postHref,\n          text: postHref\n        })]\n      });\n    }\n\n    if (postImage) {\n      return /*#__PURE__*/_jsxs(\"li\", {\n        style: getFontWeight(weight),\n        children: [content, \" \", /*#__PURE__*/_jsx(\"img\", {\n          src: postImage,\n          alt: postImage\n        })]\n      });\n    }\n\n    return /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsx(\"meta\", {\n        name: \"format-detection\",\n        content: \"telephone=no\"\n      }), /*#__PURE__*/_jsx(\"li\", {\n        style: getFontWeight(weight),\n        children: content\n      })]\n    });\n  })();\n\n  return component;\n}\n\nfunction getFontWeight(weight) {\n  if (!weight) {\n    // style 에 fontWeight 범벅 되는것을 방지\n    return {};\n  }\n\n  return {\n    fontWeight: fontWeight[weight || 'DEFAULT']\n  };\n} // Pretendard Weights: 100, 200, 300, 400, 500, 600, 700, 800, 900\n\n\nconst fontWeight = {\n  DEFAULT: 300,\n  //\n  THIN: 100,\n  EXTRA_LIGHT: 200,\n  LIGHT: 300,\n  REGULAR: 400,\n  MEDIUM: 500,\n  SEMI_BOLD: 600,\n  BOLD: 700,\n  EXTRA_BOLD: 800,\n  BLACK: 900\n};","map":null,"metadata":{},"sourceType":"module"}